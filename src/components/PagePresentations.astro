---
import Layout from '@layouts/Layout.astro';
import Header from '@components/Header.svelte';
import { presentations } from '@data/presentations';
import { getLangFromUrl, useTranslations } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

function isDateBeforeToday(dateString: string) {
	// Convert the date string to a Date object
	const inputDate = new Date(dateString);

	// Get today's date without the time part
	const today = new Date();
	today.setHours(0, 0, 0, 0); // Set time to midnight for accurate comparison

	// Check if the input date is less than today
	return inputDate <= today;
}
---

<style lang="postcss">
    .card-link {
        @apply transition-all duration-300;
        @apply border border-solid border-orange-50;
    }

    .card-link:hover {
        @apply shadow-lg bg-blue-100/80;
        @apply border border-solid border-blue-200;
        transform: scale(1.015);
    }
</style>

<Layout title={t('presentations.title')}>
	<Header client:only='svelte' />
	<main class='relative pb-36 mx-auto max-w-5xl mt-16 mb-16 px-4'>
		<h1
			class='text-3xl leading-8 font-medium tracking-tight text-blue-800 sm:text-4xl mt-10'
			transition:name='hero'
		>
			{t('presentations.title')}
		</h1>
		<div
			class='md:grid md:grid-cols-2 lg:grid lg:grid-cols-2 gap-6 mt-10'
			transition:name='content'
		>
			{
				presentations.map(
					(p) =>
						isDateBeforeToday(p.publishDate) && (
							<a
								href={p.href}
								title={p.title}
								target='_blank'
								class='card-link block h-420px relative overflow-hidden cursor-pointer mb-8 p-4 rounded-lg'
							>
								<div class='relative rounded-lg overflow-hidden w-full mx-auto mb-4 h-60'>
									<div
										class={`relative w-full h-60 bg-cover bg-no-repeat`}
										style={`background-image: url(${p.image.url});`}
									/>
								</div>

								<h3 class='text-blue-800 text-lg font-medium leading-6 mb-1 line-clamp-2'>
									{p.title}
								</h3>
								<p class='text-blue-800/80 text-md font-normal mb-4 line-clamp-2'>
									{p.description}
								</p>
								<div class='flex flex-row w-full justify-between'>
									<p class='text-blue-800/80 text-xs font-normal'>
										{new Date(
											p.publishDate,
										).toLocaleDateString(lang)}
									</p>
									{p.place?.name && (
										<p class='text-blue-800/80 text-xs font-normal px-2 py-1 bg-blue-100 rounded-full'>
											{p.place?.name}
										</p>
									)}
								</div>
							</a>
						),
				)
			}
		</div>
	</main>
</Layout>
